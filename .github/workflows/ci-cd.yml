# # .github/workflows/ci-cd.yml

# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - master
#   pull_request:
#     branches:
#       - master

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           role-to-assume: arn:aws:iam::433356891743:role/GitHubActionsECRPushRole
#           aws-region: us-east-1

#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Cache Docker layers
#         uses: actions/cache@v3
#         with:
#           path: /tmp/.buildx-cache
#           key: ${{ runner.os }}-buildx-${{ github.sha }}
#           restore-keys: |
#             ${{ runner.os }}-buildx-

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v2
        

#       - name: Build, tag, and push Docker image
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
#           IMAGE_TAG: ${{ github.sha }}
#         run: |
#           # Initialize buildx builder with caching
#           docker buildx create --use --name mybuilder
#           docker buildx inspect --bootstrap

#           # Build and push the image with two tags: commit SHA and latest
#           docker buildx build \
#             --cache-from=type=local,src=/tmp/.buildx-cache \
#             --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
#             -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
#             -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
#             ./app \
#             --push

#           # Update cache for future builds
#           mv /tmp/.buildx-cache-new /tmp/.buildx-cache